#include "common.h"
#include "sload.h"

struct 	p_particle
{
	p_flat	base	;
	half4 	color	: COLOR0;
};

void main 
( 
	p_particle II,
    out half4 outGBuffer0 : COLOR0, // rgb = View position, a = mat ID
    out half4 outGBuffer1 : COLOR1, // rgb = View normal, a = smoothness
	out half4 outGBuffer2 : COLOR2, 	// rgb = Albedo, a = baked lighting
	out half4 outGBuffer3 : COLOR3 	// rgb = Specular, a = baked lighting
)
{
  p_flat	I;	I=II.base;

  // 1. Base texture + kill pixels with low alpha
  half4 	D 	= 	tex2D		(s_base, I.tcdh);
			D	*=	II.color;
			clip	(D.w-def_aref);

  // 2. Standart output
  outGBuffer0   = half4 	(I.position.xyz /*+ O.Ne.xyz*def_virtualh/2.h*/	, xmaterial		);
  outGBuffer1   = half4		(normalize((half3)I.N.xyz)					, I.position.w	);
  outGBuffer2	= half4		(D.xyz,			def_gloss);		// OUT: rgb.gloss
  outGBuffer3	= half4		(half3(0,0,1),			1.0f);		// OUT: rgb.gloss
}
